#!/usr/bin/env Rscript

version <- "1.0"

# pd-query
# Author: Jared Johnson, jared.johnson@doh.wa.gov

#---- LOAD PACKAGES ----#
if(!require(tidyverse)){
    install.packages("tidyverse")
    suppressPackageStartupMessages(library(tidyverse))
}
if(!require(bigrquery)){
    install.packages("bigrquery")
    suppressPackageStartupMessages(library(bigrquery))
}
if(!require(argparse)){
    install.packages("argparse")
    suppressPackageStartupMessages(library(argparse))
}

#---- LOAD ARGUMENTS ----#
parser <- ArgumentParser()
parser$add_argument("-i",
                    dest="input",
                    required = T,
                    help="Input file containing SAMN numbers or isolate identifiers.")
parser$add_argument("-b",
                    dest="billing",
                    required = T,
                    help="Google billing project ID.")
parser$add_argument("-e",
                    dest="exclude",
                    required = F,
                    default = "null",
                    help="Up to one submitter to exclude. Ideal for excluding sequences from your own lab. The name must match exactly what is in the 'sra_center' column.")
args <- parser$parse_args()

# set inputs
input_file <- args$input # text file with list of sample IDs
billing <- args$billing
exclude <- args$exclude
# set outputs
out_file <- paste(paste(Sys.Date(),collapse = "-"),"ncbi-pd-query.csv", sep = "_")
bb_out_file <- paste(paste(Sys.Date(),collapse = "-"),"bb-ncbi.csv", sep = "_")

#---- FUNCTIONS ----#
delist <- function(input){
    output <- paste(unlist(input), collapse = ";")
    return(output)
}

#---- GATHER INPUT DATA ----#
# load input
df.in <- read_csv(input_file, col_names = F) %>%
  rename(ID = 1)
# gather any sample identifiers (Non-biosample numbers)
df.ids <- data.frame()
ids <- df.in %>%
  filter(str_detect(ID, pattern = "^SAMN\\d{8}$", negate = TRUE))
if ( nrow(ids) > 0 ) {
    # collapse ids for SQL query
    ids <- ids %>%
      mutate(ID = paste0('"',ID,'"')) %>%
      .$ID %>%
      paste(collapse = ", ")
    # build SQL query
    sql <- paste0("SELECT * FROM \`ncbi-pathogen-detect.pdbrowser.isolates\` AS isolates, UNNEST(isolates.isolate_identifiers) AS identifier WHERE identifier IN (",ids,")")
    # pull data from BigQuery
    tb <- bq_project_query(billing, sql)
    df.id <- bq_table_download(tb)
}
# gather any biosample numbers
df.samn <- data.frame()
samn <- df.in %>%
  filter(str_detect(ID, pattern = "^SAMN\\d{8}$", negate = FALSE))
if ( nrow(samn) > 0 ) {
    # collapse ids for SQL query
    samn <- samn %>%
      mutate(ID = paste0('"',ID,'"')) %>%
      .$ID %>%
      paste(collapse = ", ")
    # build SQL query
    sql <- paste0("SELECT * FROM \`ncbi-pathogen-detect.pdbrowser.isolates\` WHERE biosample_acc IN (",samn,")")
    # pull data from BigQuery
    tb <- bq_project_query(billing, sql)
    df.samn <- bq_table_download(tb)
}
# combine input sources
df.in <- bind_rows(df.id, df.samn) %>%
  unique() %>%
  group_by(biosample_acc) %>%
  mutate_if(is.list, delist) %>%
  ungroup() %>%
  mutate(status = "INPUT")
  
#---- GATHER SNP CLUSTER DATA ----#
# get list of unique SNP clusters
erds <- df.in %>%
  drop_na(erd_group) %>%
  .$erd_group %>%
  unique()

if ( length(erds) > 0 ) {
    # collapse list for SQL query
    erds <- paste0('"',erds,'"') %>% paste(collapse = ", ")
    # build SQL query
    sql <- paste0("SELECT * FROM \`ncbi-pathogen-detect.pdbrowser.isolates\` WHERE erd_group IN (",erds,")")
    # pull isolate info for each SNP cluster, filtering the inputs if present
    tb <- bq_project_query(billing, sql)
    df.erd <- bq_table_download(tb) %>%
      group_by(biosample_acc) %>%
      mutate_if(is.list, delist) %>%
      ungroup() %>%
      mutate(status = "SOURCED") %>%
      filter(!(biosample_acc %in% df.in$biosample_acc))

    # combine with input and save
    df.all <- bind_rows(df.in,df.erd)
    write_csv(x=df.all, file=out_file)

    # create samplesheet for BigBacter
    # exclude sourced samples if they match the provided submitter name
    if (exclude != "null") {
      df.bb <- df.erd %>%
        filter(sra_center != exclude)
    }else{ df.bb <- df.erd }
    df.bb <- df.bb  %>%
      filter(LibraryLayout == "PAIRED" & Platform == "ILLUMINA") %>%
      select(biosample_acc, 
             scientific_name, 
             asm_acc,
             Run) %>%
      rename(sample=1,
             taxa=2,
             assembly=3,
             sra=4) %>%
      mutate(taxa = str_replace_all(taxa, pattern = " ", replacement = "_")) %>%
      drop_na()

      write_csv(x = df.bb, file=bb_out_file)

}else{ write_csv(x=df.in, file=out_file) }
