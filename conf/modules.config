/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
    withName: TIMESTAMP {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            path: { "${params.outdir}" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: SAMPLESHEET_CHECK {
        publishDir = [
            path: { "${params.outdir}/${timestamp}/other/" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: NCBI_DATASETS {
        container = 'public.ecr.aws/o8h2f0o1/ncbi-datasets:16.15.0'
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: FASTERQDUMP {
        ext.args = '-S'
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: FASTP {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: SEQTK_SEQ {
        ext.args = ''
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: POPPUNK_ASSIGN {
        container = 'public.ecr.aws/o8h2f0o1/poppunk:2.6.5'
        ext.args = '--update-db --run-qc --max-zero-dist 1 --max-merge 0 --max-a-dist 0.5'
        publishDir = [
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/poppunk" },
                pattern: "clusters.csv",
                saveAs: { "${prefix}-pp-clusters.csv" },
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/poppunk" },
                pattern: "merged_clusters.csv",
                saveAs: { "${prefix}-pp-merged-clusters.csv" },
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/poppunk" },
                pattern: "pp-core-acc-dist.txt.gz",
                saveAs: { "${prefix}-pp-core-acc-dist.txt.gz" },
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/poppunk" },
                pattern: "pp-jaccard-dist.txt.gz",
                saveAs: { "${prefix}-pp-jaccard-dist.txt.gz" },
                mode: 'copy'
            ]
        ]
    }
    withName: POPPUNK_VISUAL {
        container = 'public.ecr.aws/o8h2f0o1/poppunk:2.6.5'
        ext.args = '--microreact'
        publishDir = [
            path: { "${params.outdir}/${timestamp}/${taxa}/poppunk" },
            pattern: "*-pp*",
            mode: 'copy'
        ]
    }
    withName: RESOLVE_MERGED_CLUSTERS {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            path: { "${params.outdir}" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: SNIPPY_SINGLE {
        container = 'public.ecr.aws/o8h2f0o1/snippy:4.6.0-SC2'
        ext.args = '--cleanup'
        stageInMode = 'copy'
        publishDir = [
            path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/snippy/" },
            pattern: "*.tar.gz",
            saveAs: { "${timestamp}-${taxa}-${sample}.tar.gz" },
            mode: 'copy'
        ]
    }
    withName: SNIPPY_CORE {
        container = 'public.ecr.aws/o8h2f0o1/snippy:4.6.0-SC2'
        ext.args = ''
        stageInMode = 'copy'
        publishDir = [
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/stats" },
                pattern: "*.stats",
                saveAs: { "${prefix}.snippy.stats" },
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/alns" },
                pattern: "*.clean.aln",
                saveAs: { "${prefix}.snippy.aln" },
                mode: 'copy'
            ],
        ]
    }
    withName: GUBBINS {
        ext.args = ''
        stageInMode = 'copy'
        publishDir = [
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/stats" },
                pattern: "*.stats",
                saveAs: { "${prefix}.gubbins.stats" },
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/alns" },
                pattern: "*.fasta",
                saveAs: { "${prefix}.gubbins.aln" },
                mode: 'copy'
            ]
        ]
    }
    withName: SNP_DISTS {
        container = 'public.ecr.aws/o8h2f0o1/snp-dists:0.8.2'
        ext.args = '-b'
        publishDir = [
            path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/dists" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: IQTREE {
        container = 'public.ecr.aws/o8h2f0o1/iqtree2:2.3.4'
        ext.args = '-m GTR+I+G'
        publishDir = [
            path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/trees" },
            pattern: "*.nwk",
            mode: 'copy'
        ]
    }
    withName: RAPIDNJ {
        ext.args = '-n -b 1000 -a jc'
        publishDir = [
            path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/trees" },
            pattern: "*.nwk",
            mode: 'copy'
        ]
    }
    withName: TREE_FIGURE {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/figures/" },
                pattern: "*.jpg",
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/trees" },
                pattern: "*.nwk",
                mode: 'copy'
            ]
        ]
    }
    withName: FORMAT_DIST {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            path: { "${params.outdir}/" },
            pattern: "none",
            mode: 'copy'
        ]
    }
    withName: DIST_MAT {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/figures/" },
                pattern: "*.jpg",
                mode: 'copy'
            ],
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/dists" },
                pattern: "*.csv",
                mode: 'copy'
            ]
        ]
    }
    withName: MRFIGS {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            [
                path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}/figures/" },
                pattern: "*.microreact",
                mode: 'copy'
            ]
        ]
    }
    withName: SUMMARY_TABLE {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            path: { "${params.outdir}/${timestamp}/${taxa}/${cluster}" },
            pattern: "*-summary.tsv",
            mode: 'copy'
        ]
    }
    withName: COMBINED_SUMMARY {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            path: { "${params.outdir}/${timestamp}" },
            pattern: "*.tsv",
            mode: 'copy'
        ]
    }
    withName: PUSH_CLUSTER_FILES {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        stageInMode = 'copy'
        publishDir = [
            [
                path: { "${params.db}/${taxa}/clusters/${cluster}/snippy/" },
                pattern: "*.tar.gz",
                mode: 'copy'
            ],
            [
                path: { "${params.db}/${taxa}/clusters/${cluster}/ref/" },
                pattern: "ref.fa.gz",
                mode: 'copy',
                overwrite: false
            ],
        ]
    }
    withName: PUSH_TAXA_FILES {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        publishDir = [
            path: { "${params.db}/${taxa}/pp_db/" },
            pattern: '*.tar.gz',
            mode: 'copy',
            overwrite: false
        ]
    }
    withName: PREPARE_DB_MOD {
        container = 'public.ecr.aws/o8h2f0o1/bigbacter-base:1.0'
        stageInMode = 'copy'
        publishDir = [
            path: { "${params.db}/${taxa}/pp_db/" },
            pattern: '*.tar.gz',
            mode: 'copy'
        ]
    }
    withName:
     MULTIQC {
        publishDir = [
            path: { "${params.outdir}/${timestamp}/other/" },
            mode: params.publish_dir_mode,
            pattern: '*multiqc_report.html'
        ]
    }
    withName:
     CUSTOM_DUMPSOFTWAREVERSIONS {
        publishDir = [
            path: { "${params.outdir}/${timestamp}/other/" },
            mode: params.publish_dir_mode,
            pattern: '*_versions.yml'
        ]
    }
}
